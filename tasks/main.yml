---

- name: Update / Upgrade apt (Debian)
  register: updatedebian
  apt:
    update_cache: yes
    force_apt_get: yes
    upgrade: "{{ update_upgrade_command }}"
    cache_valid_time: "{{ update_cache_valid_time }}"
  when: ansible_os_family == 'Debian'

- name: Autoremove packages (Debian)
  apt:
    autoremove: "{{ update_autoremove }}"
  when:
    - ansible_os_family == 'Debian'
    - update_autoremove == 'yes'

- name: Update / Upgrade yum (RedHat)
  yum:
    name: "*"
    update_cache: yes
    state: latest
  when: ansible_os_family == 'RedHat'

- name: Install yum-utils (RedHat)
  package:
    name: yum-utils
  when: ansible_os_family == 'RedHat'


- name: Check if a reboot is required (Debian)
  stat:
    path: /var/run/reboot-required
  register: reboot_required_debian
  when:
    - ansible_os_family == 'Debian'
    - ansible_connection != 'docker'


- name: Check if a reboot is required (RedHat)
  command: needs-restarting -r
  register: reboot_required_redhat
  failed_when: reboot_required_redhat.rc not in [ 0, 1 ]
  changed_when: "reboot_required_redhat.rc == 1"
  when:
    - ansible_os_family == 'RedHat'
    - ansible_connection != 'docker'


- name: Reboot Machine
  include_tasks: reboot.yml
  when:
    - ansible_connection != "docker"
    - update_reboot | bool
    - reboot_required_debian.stat.exists | default(false) or
      reboot_required_redhat.changed | default(false)
